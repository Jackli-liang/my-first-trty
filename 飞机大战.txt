飞机大战游戏开发的基本流程：
    	1. 导入相关包  
		import pygame
	2. 包的初始化 
		pygame.init()
	3. 窗口对象 （pygame.surface ）
		pygame.display.set_mode((size))
	4.游戏主循环（事件监听）:
		while 1：
		4.1 处理游戏事件
			for enevt in pygame.event.get():
			     if event.type == QUIT:
			          pygame.quit()
		4.2 更新游戏状态
			ballrect = ballrect.move(speed)
    			if ballrect.left < 0 or ballrect.right > width:
        				speed[0] = -speed[0]
   			 if ballrect.top < 0 or ballrect.bottom > height:
        				speed[1] = -speed[1]

		4.3 在屏幕上绘制
			screen.fill(black)
   			screen.blit(ball, ballrect)
    			pygame.display.flip()

游戏中的图片： 
	加载图片：             bg = pygame.image.load("图片名称+后缀")
	将图片放置到屏幕：screen.blit(图片，图片位置)
	将显示更新到屏幕：pygame.display.flip()
	颜色：    	             red = pygame.Color(R,G,B)
	线:                         pygame.draw.line(screen,red,(线段起始坐标),(线段结束坐标)，线的宽度)
	矩形：                    pygame.draw.rect(screen,red,(x坐标，y坐标,宽度，高度)，线的宽度)
	圆：	             pygame.draw.cirlce(screen,red,(圆心坐标)半径，线的宽度)

游戏中的文字：
	加载字体：             font = pygame.font.SysFont('华文隶书',32)   
	得到surface对象：  text = font.render('得分：0'，True,red（渲染颜色），blue（背景颜色）)
              将文字放置到屏幕：   screen.blit(text,text.get_rect())

游戏中的音效：
	加载背景音乐：     pygame.mixer.music.load('./音乐名称+.mp3'------------绝对路径或者同一文件路径)
	无限循环播放：     pygame.mixer.music.play(-1)
	设置音量大小 ：    pygame.mixer.music.set_volume(0-1 值越大，音量越小)

动画切换：
	帧速率（用FPS或帧/秒来度量):   pygame.time.Clock(）中的 tick(num) 控制
				先创建对象   后对象调用tick（num）

精灵及精灵组：
	精灵：可以认为是一个个小图片，一种可以在屏幕上移动的图形对象，并且可以和其他图形对象交互，
	          可以是pygame绘制函数绘制的图像，也可以是原来就有的图像文件
	精灵组：它是一个容器，用于管理组内精灵的绘制和更新
碰撞监测：
	两个精灵之间的矩形检测：
		pygame.sprite.colide_rect(sprite_1,sprite_2)
		pygame.sprite.colide_rect_ratio(0.5)(sprite_1,sprite_2)
		1. 创建类 精灵 的函数方法  Block
			class：Block（pygame.sprite.Sprite）
		                                构造函数：  def __init__(self,color,width,height)
		2. 实例化精灵对象
			sprite_1 = Block(pygame.Color(255,0,0)50,50宽度高度，（距离原点的距离）)
		3. 在屏幕上绘制精灵对象
			screeen(sprite.image(位置))
	圆形监测碰撞：
		pygame.sprite.colide_circle(sprite_1,sprite_2)
		pygame.sprite.colide_circle_ratio(0.5)(sprite_1,sprite_2)
	两个精灵之间的像素遮罩：
		pygame.sprite.colide_mask(sprite_1,sprite_2)
	精灵和精灵组之间的碰撞检测：
		pygame.sprite.spritecollideany(sprite,sprite_group,bool)

开发步骤：
	1. 面对对象项目分析
		对象关系：
			飞机（父类）：敌方  我方
			――子弹 补给―――我方   玩家积分 
	2. 项目初始化
	3. 载入我方飞机
		游戏开始界面
		封装我方飞机类
		添加飞机飞行效果
		键盘事件，控制飞机移动，边界控制
		封装子弹类，使飞机能够发射子弹
	4. 载入敌方飞机
		封装敌方飞机类
		敌方飞机可以飞行和出现
		
	5. 碰撞检测，爆炸效果及音效
		子弹碰撞检测
		敌机坠毁爆炸效果及音效
		撞机爆炸效果及音效
		
	6. 游戏玩家成绩统计
	7. 大型敌机入场
	8. 优化总结





